esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  min_version: 2024.6.0
  name_add_mac_suffix: false
  project:
    name: esphome.web
    version: dev

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption: 
    key: ${api_key}

# Allow Over-The-Air updates
ota:
- platform: esphome

# Allow provisioning Wi-Fi via serial
# improv_serial:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: ${ip_address}
    gateway: ${gateway}
    subnet: ${subnet}

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device via WiFi AP.
# captive_portal:

dashboard_import:
  package_import_url: github://esphome/example-configs/esphome-web/esp32.yaml@main
  import_full_config: true

# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
#esp32_improv:
#  authorizer: none

# To have a "next url" for improv serial
# web_server:

# Gate has open closed sensors.
# 3.3v, pulled to GND when sensor activates.
# Must already be a pull-up on the line, so no pull-up/down should be needed 
binary_sensor:
  - platform: gpio
    id: open_endstop
    name: "Open Endstop"
    pin:
      number: ${endstop_open_pin}
      inverted: true
      mode:
        input: true
        pullup: false
        pulldown: false
  - platform: gpio
    id: closed_endstop
    name: "Closed Endstop"
    pin:
      number: ${endstop_closed_pin}
      inverted: true
      mode:
        input: true
        pullup: false
        pulldown: false

output:
  - platform: gpio
    pin: ${relay_pin}
    id: relay


cover:
  - platform: template
    name: "Gate"
    lambda: |-
      if (id(closed_endstop).state) {
        return COVER_CLOSED;
      } else {
        return COVER_OPEN;
      }
    open_action:
      - output.turn_on: relay
      - delay: 0.1s
      - output.turn_off: relay
    close_action:
      - output.turn_on: relay
      - delay: 0.1s
      - output.turn_off: relay
    stop_action:
      - output.turn_on: relay
      - delay: 0.1s
      - output.turn_off: relay
